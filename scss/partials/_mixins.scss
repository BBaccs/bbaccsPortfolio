// ****Mixins****

@mixin align-items-justify-cont($align-items, $justify-content) {
  // Align items
	-webkit-box-align: $align-items;
    -ms-flex-align: $align-items;
    align-items: $align-items;

    //Justify content
    -webkit-box-pack: $justify-content;
		-ms-flex-pack: $justify-content;
		justify-content: $justify-content;
}

@mixin display-flex() {
  display: -webkit-box;  
  display: -ms-flexbox;  
  display: flex;
}

@mixin display-grid() {
	display: -ms-grid;
	display: grid;
}

@mixin flex-wrap($property) {
  -ms-flex-wrap: $property;
      flex-wrap: $property;
}


@mixin transition-duration($property) {
	-webkit-transition-duration: $property;
	     -o-transition-duration: $property;
	        transition-duration: $property;
}

@mixin translate($percentage) {
  -webkit-transform: translate($percentage);
  -ms-transform: translate($percentage);
      transform: translate($percentage);
}

@mixin box-shadow($vw1, $vw2, $vw3, $v4, $color) {
  -webkit-box-shadow: $vw1 $vw2 $vw3 $v4 $color;
  box-shadow: $vw1 $vw2 $vw3 $v4 $color; 
}

@mixin transform($property-number) {
	-webkit-transform: $property-number;
	-ms-transform: $property-number;
	    transform: $property-number;
}

// Alternative way to structure mixins, testing to see what is best for needs
@mixin animation-slider() {
  .span1, .span2, .span3 {
    @content;
  }
}


// ****Functions****

// Set text color bases on bg
@function set-text-color($color) {
  // If bg color is darker
  @if(lightness($color) < 50) {
    @return $primary-font-color;
  }
  // If bg color is lighter
  @else { 
    @return $secondary-font-color;
  }
}

// Set text color bases on bg
@function set-link-color($color) {
  @if(lightness($color) < 50) {
    @return $primary-font-color;
  }
  @else { 
    @return $secondary-font-color;
  }
}

@mixin set-background($color) {
  background-color: $color;
  color: set-text-color($color);
  li a {
      color: set-link-color($color);
    }
}